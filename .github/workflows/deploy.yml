name: Deploy to GitHub Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare dist
        run: |
          set -e
          rm -rf dist
          mkdir -p dist
          # Copy static site content
          cp -r public/* dist/
          # Include src folder because index references /src/* assets
          cp -r src dist/src

          # Rewrite absolute root paths to include repo name for GitHub Pages project site
          REPO_NAME=holodStore
          find dist -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" \) -print0 | xargs -0 sed -i "s|href=\"/|href=\"/${REPO_NAME}/|g"
          find dist -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" \) -print0 | xargs -0 sed -i "s|src=\"/|src=\"/${REPO_NAME}/|g"
          find dist -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" \) -print0 | xargs -0 sed -i "s|href='/|href='/${REPO_NAME}/|g"
          find dist -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" \) -print0 | xargs -0 sed -i "s|src='/|src='/${REPO_NAME}/|g"

          # SPA fallback for client-side routing
          cp dist/index.html dist/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
