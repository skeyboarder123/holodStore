const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è GitHub Pages
 * –ö–æ–ø–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ public –∏ src –≤ dist —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
 */

const buildDir = 'dist';
const publicDir = 'public';
const srcDir = 'src';

// –û—á–∏—â–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dist
if (fs.existsSync(buildDir)) {
  fs.rmSync(buildDir, { recursive: true, force: true });
}

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dist
fs.mkdirSync(buildDir, { recursive: true });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
function copyDir(src, dest) {
  if (!fs.existsSync(src)) {
    console.warn(`–ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${src}`);
    return;
  }

  if (!fs.existsSync(dest)) {
    fs.mkdirSync(dest, { recursive: true });
  }

  const entries = fs.readdirSync(src, { withFileTypes: true });

  for (const entry of entries) {
    const srcPath = path.join(src, entry.name);
    const destPath = path.join(dest, entry.name);

    if (entry.isDirectory()) {
      copyDir(srcPath, destPath);
    } else {
      fs.copyFileSync(srcPath, destPath);
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function copyFile(src, dest) {
  if (fs.existsSync(src)) {
    fs.copyFileSync(src, dest);
    console.log(`–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${src} -> ${dest}`);
  } else {
    console.warn(`–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${src}`);
  }
}

try {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –¥–ª—è GitHub Pages...');

  // –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ public –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  console.log('üìÅ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –∏–∑ public...');
  copyDir(publicDir, buildDir);

  // –ö–æ–ø–∏—Ä—É–µ–º src –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
  console.log('üìÅ –ö–æ–ø–∏—Ä—É–µ–º src –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é...');
  copyDir(srcDir, path.join(buildDir, 'src'));

  // –ö–æ–ø–∏—Ä—É–µ–º 404.html –≤ –∫–æ—Ä–µ–Ω—å
  console.log('üìÑ –ö–æ–ø–∏—Ä—É–µ–º 404.html...');
  copyFile('404.html', path.join(buildDir, '404.html'));

  // –ö–æ–ø–∏—Ä—É–µ–º README.md
  console.log('üìÑ –ö–æ–ø–∏—Ä—É–µ–º README.md...');
  copyFile('README.md', path.join(buildDir, 'README.md'));

  // –°–æ–∑–¥–∞–µ–º .nojekyll —Ñ–∞–π–ª –¥–ª—è GitHub Pages
  console.log('üìÑ –°–æ–∑–¥–∞–µ–º .nojekyll...');
  fs.writeFileSync(path.join(buildDir, '.nojekyll'), '');

  console.log('‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  console.log(`üì¶ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–±–æ—Ä–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: ${buildDir}`);
  console.log('üåê –ì–æ—Ç–æ–≤–æ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ GitHub Pages');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ:', error);
  process.exit(1);
}
